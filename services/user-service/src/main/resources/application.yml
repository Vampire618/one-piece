server:
  port: 8770

spring:
  application:
    name: user-service
  datasource:
    # 主数据源，默认的
    url: jdbc:mysql://95.163.194.40:32081/onepiecedb?useUnicode=true&characterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: dbuser
    password: Remote_user
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  #JPA配置
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
  jackson:
    serialization:
      indent_output: true


eureka:
  client:
    service-url:
      #指定服务注册中心的地址
      defaultZone: http://localhost:8761/eureka/

orm:
  mybatis:
    only: true

mybatis:
  #实体类所做包
  type-aliases-package: com.oliiyu.userservice.repository.entity
  config-locations: classpath:mybatis-config.xml
  #mapper.xml所在位置
  mapper-locations: classpath:mappers/*.xml


# JWT
jwt:
  header: Authorization
  secret: mySecret
  expiration: 604800
  tokenHead: "Bearer"
  route:
    authentication:
      path: auth
      refresh: refresh
      register: "auth/register"